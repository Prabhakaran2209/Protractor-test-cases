[
  {
    "keyword": "Feature",
    "name": "To validate calc functionality",
    "line": 1,
    "id": "to-validate-calc-functionality",
    "tags": [],
    "uri": "feature\\demo.feature",
    "elements": [
      {
        "id": "to-validate-calc-functionality;calc-addition",
        "keyword": "Scenario",
        "line": 11,
        "name": "calc addition",
        "tags": [
          {
            "name": "@calculator",
            "line": 2
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 5,
            "name": "Im in \"calc\" site",
            "match": {
              "location": "stepdef\\steps.ts:11"
            },
            "result": {
              "status": "passed",
              "duration": 770000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 6,
            "name": "I enter \"2\" and \"2\"",
            "match": {
              "location": "stepdef\\steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 309000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 7,
            "name": "The output should be displayed as \"4\"",
            "match": {
              "location": "stepdef\\steps.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 2074000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:9"
            },
            "result": {
              "status": "passed",
              "duration": 12000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          }
        ]
      },
      {
        "id": "to-validate-calc-functionality;calc-addition",
        "keyword": "Scenario",
        "line": 12,
        "name": "calc addition",
        "tags": [
          {
            "name": "@calculator",
            "line": 2
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 5,
            "name": "Im in \"calc\" site",
            "match": {
              "location": "stepdef\\steps.ts:11"
            },
            "result": {
              "status": "passed",
              "duration": 417000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 6,
            "name": "I enter \"7\" and \"3\"",
            "match": {
              "location": "stepdef\\steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 237000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 7,
            "name": "The output should be displayed as \"11\"",
            "match": {
              "location": "stepdef\\steps.ts:26"
            },
            "result": {
              "status": "failed",
              "duration": 2009000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -10\n    +11\n\n    at C:\\Users\\lenovo\\protractorDemo\\stepdef\\steps.ts:31:30\n    at elementArrayFinder_.then (C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\protractor\\built\\element.js:804:32)\n    at ManagedPromise.invokeCallback_ (C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\promise.js:1376:14)\n    at TaskQueue.execute_ (C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\promise.js:3084:14)\n    at TaskQueue.executeNext_ (C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\promise.js:3067:27)\n    at asyncRun (C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\promise.js:2927:27)\n    at C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\protractor\\node_modules\\selenium-webdriver\\lib\\promise.js:668:7\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:9"
            },
            "result": {
              "status": "passed",
              "duration": 393000000
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      },
      {
        "id": "to-validate-calc-functionality;angular-page-navigation",
        "keyword": "Scenario",
        "line": 24,
        "name": "Angular page navigation",
        "tags": [
          {
            "name": "@Angulartesting",
            "line": 14
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 17,
            "name": "Im in \"angular\" site",
            "match": {
              "location": "stepdef\\steps.ts:11"
            },
            "result": {
              "status": "passed",
              "duration": 4741000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I click on link",
            "match": {
              "location": "stepdef\\steps.ts:36"
            },
            "result": {
              "status": "passed",
              "duration": 2363000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "I landed in another page",
            "match": {
              "location": "stepdef\\steps.ts:40"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 20,
            "name": "I type \"hello\" in search box",
            "match": {
              "location": "stepdef\\steps.ts:44"
            },
            "result": {
              "status": "passed",
              "duration": 1505000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:9"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      },
      {
        "id": "to-validate-calc-functionality;angular-page-navigation",
        "keyword": "Scenario",
        "line": 25,
        "name": "Angular page navigation",
        "tags": [
          {
            "name": "@Angulartesting",
            "line": 14
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 17,
            "name": "Im in \"angular\" site",
            "match": {
              "location": "stepdef\\steps.ts:11"
            },
            "result": {
              "status": "passed",
              "duration": 2185000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I click on link",
            "match": {
              "location": "stepdef\\steps.ts:36"
            },
            "result": {
              "status": "passed",
              "duration": 3153000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "I landed in another page",
            "match": {
              "location": "stepdef\\steps.ts:40"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 20,
            "name": "I type \"protractor\" in search box",
            "match": {
              "location": "stepdef\\steps.ts:44"
            },
            "result": {
              "status": "passed",
              "duration": 1470000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:9"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      },
      {
        "id": "to-validate-calc-functionality;angular-page-navigation",
        "keyword": "Scenario",
        "line": 26,
        "name": "Angular page navigation",
        "tags": [
          {
            "name": "@Angulartesting",
            "line": 14
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 17,
            "name": "Im in \"angular\" site",
            "match": {
              "location": "stepdef\\steps.ts:11"
            },
            "result": {
              "status": "passed",
              "duration": 1668000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I click on link",
            "match": {
              "location": "stepdef\\steps.ts:36"
            },
            "result": {
              "status": "passed",
              "duration": 1046000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "I landed in another page",
            "match": {
              "location": "stepdef\\steps.ts:40"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 20,
            "name": "I type \"API\" in search box",
            "match": {
              "location": "stepdef\\steps.ts:44"
            },
            "result": {
              "status": "passed",
              "duration": 1867000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepdef\\hooks.ts:9"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      }
    ]
  }
]